import express from 'express'
import dotenv from 'dotenv'
import { createServer } from 'http'
import { Server } from 'socket.io'
import cors from 'cors'
import { UsersController } from './controllers/users'
import { MatchMakerSocketController } from './socket_controllers/match_maker'
import { Socket } from 'dgram'
import { authenticate_socket } from './middlewares/socket_authentication'
import { ConnectedUsers } from './sockets/connected_users'
import { ProblemsController } from './controllers/problems'
import { ProblemPickerService } from './services/problem_picker_service'
import { UsersUnsolvedProblems } from './models/users_unsolved_problems'
import { JudgeZeroService } from './services/judge/judge_zero_service'
import { Problems } from './models/problem'


dotenv.config()

const port = process.env.PORT || 8080

const app = express()
app.use(cors())
app.use(express.json({ limit: '50mb' }))

// routes
UsersController.routes(app)
ProblemsController.routes(app)

// websockets
const server = createServer(app)
const io = new Server(server, {
  cors: {
    origin: '*',
  }
})

// socket.io middlewares
io.use(authenticate_socket)

io.on('connection', (socket) => {
  new MatchMakerSocketController(io, socket).register_events()
})


server.listen(port, () => {
  console.log(`Listening on port : ${port}`)
})

// JudgeZeroService.submit_problem_sync(
//   "60bmX43lmyLCbPmiGyPw",
//   "I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgplbnVtIERBVEEge1ZBUiwgVkFMLCBVTktOT1dOfTsKc3RydWN0IEluc3Q7CnR5cGVkZWYgaW50ICgqRlVOQykgKEluc3QqKTsKCnN0cnVjdCBJbnN0IHsKCUZVTkMgY2FsbDsKCURBVEEgdnQ7CglzdHJpbmcgdmFyOwoJaW50IHZhbDsKfTsKCnZlY3RvcjxJbnN0PiBpbnN0czsKaW50IGluc3RfaWR4LCBpbl9pZHg7CnN0YWNrPGludD4gc3RrOwp1bm9yZGVyZWRfbWFwPHN0cmluZywgaW50PiB2YXI7CnZlY3RvcjxpbnQ+IGluLCBvdXQ7CnZvaWQgaW5pdCgpIHsKCWluLmNsZWFyKCksIG91dC5jbGVhcigpOwoJdmFyLmNsZWFyKCk7CglpbnN0cy5jbGVhcigpOwoJaW5zdF9pZHggPSAxLCBpbl9pZHggPSAwOwoJd2hpbGUgKCFzdGsuZW1wdHkoKSkKCQlzdGsucG9wKCk7Cn0KaW50IFBVU0hfRihJbnN0ICppbnN0KSB7CglpZiAoaW5zdC0+dnQgPT0gREFUQTo6VkFMKSB7CgkJc3RrLnB1c2goaW5zdC0+dmFsKTsKCX0gZWxzZSB7CgkJYXV0byB4ID0gdmFyLmZpbmQoaW5zdC0+dmFyKTsKCQlpZiAoeCA9PSB2YXIuZW5kKCkpCgkJCXJldHVybiAxOwoJCXN0ay5wdXNoKHgtPnNlY29uZCk7Cgl9CglpbnN0X2lkeCsrOwoJcmV0dXJuIDA7Cn0KaW50IFBPUF9GKEluc3QgKmluc3QpIHsKCWlmIChzdGsuc2l6ZSgpID09IDApCgkJcmV0dXJuIDE7Cgl2YXJbaW5zdC0+dmFyXSA9IHN0ay50b3AoKTsKCXN0ay5wb3AoKTsKCWluc3RfaWR4Kys7CglyZXR1cm4gMDsKfQppbnQgRFVQX0YoSW5zdCAqaW5zdCkgewoJaWYgKHN0ay5zaXplKCkgPT0gMCkKCQlyZXR1cm4gMTsKCXN0ay5wdXNoKHN0ay50b3AoKSk7CglpbnN0X2lkeCsrOwoJcmV0dXJuIDA7Cn0KaW50IEFERF9GKEluc3QgKmluc3QpIHsKCWlmIChzdGsuc2l6ZSgpIDwgMikKCQlyZXR1cm4gMTsKCWludCB2YSA9IHN0ay50b3AoKTsgc3RrLnBvcCgpOwoJaW50IHZiID0gc3RrLnRvcCgpOyBzdGsucG9wKCk7CglzdGsucHVzaCh2YSArIHZiKTsKCWluc3RfaWR4Kys7CglyZXR1cm4gMDsKfQppbnQgU1VCX0YoSW5zdCAqaW5zdCkgewoJaWYgKHN0ay5zaXplKCkgPCAyKQoJCXJldHVybiAxOwoJaW50IHZhID0gc3RrLnRvcCgpOyBzdGsucG9wKCk7CglpbnQgdmIgPSBzdGsudG9wKCk7IHN0ay5wb3AoKTsKCXN0ay5wdXNoKHZhIC0gdmIpOwoJaW5zdF9pZHgrKzsKCXJldHVybiAwOwp9CmludCBNVUxfRihJbnN0ICppbnN0KSB7CglpZiAoc3RrLnNpemUoKSA8IDIpCgkJcmV0dXJuIDE7CglpbnQgdmEgPSBzdGsudG9wKCk7IHN0ay5wb3AoKTsKCWludCB2YiA9IHN0ay50b3AoKTsgc3RrLnBvcCgpOwoJc3RrLnB1c2godmEgKiB2Yik7CglpbnN0X2lkeCsrOwoJcmV0dXJuIDA7Cn0KaW50IERJVl9GKEluc3QgKmluc3QpIHsKCWlmIChzdGsuc2l6ZSgpIDwgMikKCQlyZXR1cm4gMTsKCWludCB2YSA9IHN0ay50b3AoKTsgc3RrLnBvcCgpOwoJaW50IHZiID0gc3RrLnRvcCgpOyBzdGsucG9wKCk7CglpZiAodmIgPT0gMCkKCQlyZXR1cm4gMTsKCXN0ay5wdXNoKHZhIC8gdmIpOwoJaW5zdF9pZHgrKzsKCXJldHVybiAwOwp9CmludCBSRUFEX0YoSW5zdCAqaW5zdCkgewoJaWYgKGluX2lkeCA+PSBpbi5zaXplKCkpCgkJcmV0dXJuIDE7CglzdGsucHVzaChpbltpbl9pZHhdKTsKCWluc3RfaWR4KyssIGluX2lkeCsrOwoJcmV0dXJuIDA7Cn0KaW50IFdSSVRFX0YoSW5zdCAqaW5zdCkgewoJaWYgKHN0ay5zaXplKCkgPT0gMCkKCQlyZXR1cm4gMTsKCW91dC5wdXNoX2JhY2soc3RrLnRvcCgpKTsKCXN0ay5wb3AoKTsKCWluc3RfaWR4Kys7CglyZXR1cm4gMDsKfQppbnQgSlVNUF9GKEluc3QgKmluc3QpIHsKCWlmIChpbnN0LT52dCA9PSBEQVRBOjpWQUwpIHsKCQlpbnN0X2lkeCA9IGluc3QtPnZhbDsKCX0gZWxzZSB7CgkJYXV0byB4ID0gdmFyLmZpbmQoaW5zdC0+dmFyKTsKCQlpZiAoeCA9PSB2YXIuZW5kKCkpCgkJCXJldHVybiAxOwoJCWluc3RfaWR4ID0geC0+c2Vjb25kOwoJfQoJcmV0dXJuIDA7Cn0KaW50IEpVTVBQT1NfRihJbnN0ICppbnN0KSAgewoJaWYgKHN0ay5zaXplKCkgPT0gMCkKCQlyZXR1cm4gMTsKCWludCB2ID0gc3RrLnRvcCgpOyBzdGsucG9wKCk7CglpZiAodiA8PSAwKQoJCWluc3RfaWR4Kys7CgllbHNlCgkJcmV0dXJuIEpVTVBfRihpbnN0KTsKCXJldHVybiAwOwp9CmludCBKVU1QWkVST19GKEluc3QgKmluc3QpIHsKCWlmIChzdGsuc2l6ZSgpID09IDApCgkJcmV0dXJuIDE7CglpbnQgdiA9IHN0ay50b3AoKTsgc3RrLnBvcCgpOwoJaWYgKHYgIT0gMCkKCQlpbnN0X2lkeCsrOwoJZWxzZQoJCXJldHVybiBKVU1QX0YoaW5zdCk7CglyZXR1cm4gMDsKfQoKREFUQSBjaGVja1R5cGUoY2hhciAqcSkgewoJaWYgKHEgPT0gTlVMTCB8fCBxWzBdID09ICdcMCcpCgkJcmV0dXJuIERBVEE6OlVOS05PV047CglpZiAocVswXSA9PSAnLScgfHwgcVswXSA9PSAnKycpCXErKzsKCWlmIChxWzBdID09ICdcMCcpCXJldHVybiBEQVRBOjpVTktOT1dOOwoJZm9yICg7ICpxOyBxKyspIHsKCQlpZiAoIWlzZGlnaXQoKnEpKQoJCQlyZXR1cm4gREFUQTo6VkFSOwoJfQoJcmV0dXJuIERBVEE6OlZBTDsKfQoKdm9pZCBkdW1wKCkgewoJcHJpbnRmKCJJbnN0cnVjdGlvbiBbJWRdXG4iLCBpbnN0X2lkeCk7CglzdGFjazxpbnQ+IHRtcCA9IHN0azsKCXByaW50Zigic3RhY2s6Iik7Cgl3aGlsZSAoIXRtcC5lbXB0eSgpKSB7CgkJaW50IHUgPSB0bXAudG9wKCk7IHRtcC5wb3AoKTsKCQlwcmludGYoIiAlZCIsIHUpOwoJfQoJcHV0cygiIik7CglwcmludGYoIm1hcDogWyIpOwoJZm9yIChhdXRvICZ4IDogdmFyKSB7CgkJcHJpbnRmKCJ7JXMsICVkfSAiLCB4LmZpcnN0LmNfc3RyKCksIHguc2Vjb25kKTsKCX0KCXB1dHMoIl0iKTsKfQoKdm9pZCBleGVjX2luc3RzKCkgewoJd2hpbGUgKHRydWUpIHsKCQlpZiAoaW5zdF9pZHggPCAxIHx8IGluc3RfaWR4ID4gaW5zdHMuc2l6ZSgpKQoJCQlicmVhazsKCQlJbnN0ICppbnN0ID0gJmluc3RzW2luc3RfaWR4LTFdOwoJCWludCByZXQgPSBpbnN0LT5jYWxsKGluc3QpOwoJCWlmIChyZXQpIHsKCQkJcHV0cygiQUJPUlRFRCIpOwoJCQlwdXRzKCIjIik7CgkJCXJldHVybjsKCQl9Cgl9Cglmb3IgKGF1dG8geCA6IG91dCkKCQlwcmludGYoIiVkXG4iLCB4KTsKCXB1dHMoIiMiKTsKfQoKaW50IG1haW4oKSB7CgljaGFyIGJ1ZlsxMDI0XTsKCXVub3JkZXJlZF9tYXA8c3RyaW5nLCBGVU5DPiBmbWFwID0ge3siUFVTSCIsIFBVU0hfRn0sIHsiUE9QIiwgUE9QX0Z9LCAKCQl7IkRVUCIsIERVUF9GfSwgeyJBREQiLCBBRERfRn0sIHsiU1VCIiwgU1VCX0Z9LCB7Ik1VTCIsIE1VTF9GfSwKCQl7IkRJViIsIERJVl9GfSwgeyJSRUFEIiwgUkVBRF9GfSwgeyJXUklURSIsIFdSSVRFX0Z9LCB7IkpVTVAiLCBKVU1QX0Z9LAoJCXsiSlVNUFBPUyIsIEpVTVBQT1NfRn0sIHsiSlVNUFpFUk8iLCBKVU1QWkVST19GfX07Cgl3aGlsZSAoZmdldHMoYnVmLCAxMDI0LCBzdGRpbikpIHsKCQlpbml0KCk7CgkJd2hpbGUgKGJ1ZlswXSAhPSAnIycpIHsKCQkJY2hhciAqcCA9IHN0cnRvayhidWYsICIgXG4iKSwgKnEgPSBOVUxMOwoJCQlJbnN0IGluc3Q7CgkJCWZvciAoaW50IGkgPSAwOyBwICE9IE5VTEw7IGkrKykgewoJCQkJaWYgKGkgPT0gMCkKCQkJCQlpbnN0LmNhbGwgPSBmbWFwW3BdOwoJCQkJZWxzZQoJCQkJCXEgPSBwOwoJCQkJcCA9IHN0cnRvayhOVUxMLCAiIFxuIik7CgkJCX0KCQkJaWYgKHEgIT0gTlVMTCkgewoJCQkJaW5zdC52dCA9IGNoZWNrVHlwZShxKTsKCQkJCWlmIChpbnN0LnZ0ID09IERBVEE6OlZBTCkKCQkJCQlpbnN0LnZhbCA9IHN0b2kocSk7CgkJCQllbHNlCgkJCQkJaW5zdC52YXIgPSBxOwoJCQl9CgkJCWluc3RzLnB1c2hfYmFjayhpbnN0KTsKCQkJZmdldHMoYnVmLCAxMDI0LCBzdGRpbik7CgkJfQoKCQl3aGlsZSAoZmdldHMoYnVmLCAxMDI0LCBzdGRpbikgJiYgYnVmWzBdICE9ICcjJykKCQkJaW4ucHVzaF9iYWNrKHN0b2koYnVmKSk7CgoJCWV4ZWNfaW5zdHMoKTsKCX0KCXJldHVybiAwOwp9Ci8qClJFQUQKUE9QIG51bQpQVVNIIDIKUE9QIHgKUFVTSCBudW0KUFVTSCAyClNVQgpKVU1QUE9TIDMxClBVU0ggbnVtClBVU0ggeApTVUIKRFVQCkpVTVBaRVJPIDI4CkpVTVBQT1MgMjgKUFVTSCB4ClBVU0ggbnVtCkRJVgpQVVNIIHgKTVVMClBVU0ggbnVtClNVQgpKVU1QWkVSTyAzMQpQVVNIIHgKUFVTSCAxCkFERApQT1AgeApKVU1QIDkKUFVTSCAxCldSSVRFCkpVTVAgMzMKUFVTSCAwCldSSVRFCiMKNwojClBVU0ggdW5kZWZpbmVkCldSSVRFCiMKIwoqLw=="
//   , 52
// )

const test = async () => {
  let number_of_problems_tested = 0
  let number_of_valid_problems = 0
  const problems = await Problems.get_all_problems()
  for (const problem of problems) {
    if (problem.accepted_code != undefined) {
      console.log(`testing problem: ${problem.title}`)
      const is_problem_valid = await JudgeZeroService.is_problem_testcases_valid(problem, 52)
      number_of_problems_tested += 1
      if (is_problem_valid) {
        number_of_valid_problems += 1
      }
    }
  }
  console.log(`${number_of_valid_problems} valid problems of ${number_of_problems_tested} problems tested`)
}
// test()